"""Initial migration

Revision ID: 47de11e3f36b
Revises: 
Create Date: 2025-07-28 21:26:22.198017

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '47de11e3f36b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=False),
    sa.Column('github_username', sa.String(length=255), nullable=False),
    sa.Column('github_email', sa.String(length=255), nullable=True),
    sa.Column('github_avatar_url', sa.String(length=512), nullable=True),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('website', sa.String(length=512), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('company', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('can_publish', sa.Boolean(), nullable=False),
    sa.Column('max_package_size_mb', sa.Integer(), nullable=False),
    sa.Column('github_access_token', sa.String(length=512), nullable=True),
    sa.Column('github_refresh_token', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_packages', sa.Integer(), nullable=False),
    sa.Column('total_downloads', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_github_email'), 'users', ['github_email'], unique=True)
    op.create_index(op.f('ix_users_github_id'), 'users', ['github_id'], unique=True)
    op.create_index(op.f('ix_users_github_username'), 'users', ['github_username'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('packages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('normalized_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('readme', sa.Text(), nullable=True),
    sa.Column('homepage', sa.String(length=512), nullable=True),
    sa.Column('repository', sa.String(length=512), nullable=True),
    sa.Column('documentation', sa.String(length=512), nullable=True),
    sa.Column('package_type', sa.Enum('AGENT', 'TOOL', 'CHAIN', 'PROMPT', 'DATASET', name='packagetype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PUBLISHED', 'DEPRECATED', 'SUSPENDED', name='packagestatus'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=False),
    sa.Column('auto_publish', sa.Boolean(), nullable=False),
    sa.Column('total_downloads', sa.Integer(), nullable=False),
    sa.Column('download_count_last_30_days', sa.Integer(), nullable=False),
    sa.Column('version_count', sa.Integer(), nullable=False),
    sa.Column('latest_version', sa.String(length=50), nullable=True),
    sa.Column('latest_version_published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('search_vector', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_packages_downloads', 'packages', ['total_downloads'], unique=False)
    op.create_index('idx_packages_type_status', 'packages', ['package_type', 'status'], unique=False)
    op.create_index('idx_packages_updated', 'packages', ['updated_at'], unique=False)
    op.create_index(op.f('ix_packages_id'), 'packages', ['id'], unique=False)
    op.create_index(op.f('ix_packages_is_private'), 'packages', ['is_private'], unique=False)
    op.create_index(op.f('ix_packages_name'), 'packages', ['name'], unique=True)
    op.create_index(op.f('ix_packages_normalized_name'), 'packages', ['normalized_name'], unique=True)
    op.create_index(op.f('ix_packages_owner_id'), 'packages', ['owner_id'], unique=False)
    op.create_index(op.f('ix_packages_package_type'), 'packages', ['package_type'], unique=False)
    op.create_index(op.f('ix_packages_status'), 'packages', ['status'], unique=False)
    op.create_index(op.f('ix_packages_total_downloads'), 'packages', ['total_downloads'], unique=False)
    op.create_table('daily_download_summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('download_date', sa.Date(), nullable=False),
    sa.Column('total_downloads', sa.Integer(), nullable=False),
    sa.Column('unique_users', sa.Integer(), nullable=False),
    sa.Column('unique_ips', sa.Integer(), nullable=False),
    sa.Column('cli_downloads', sa.Integer(), nullable=False),
    sa.Column('web_downloads', sa.Integer(), nullable=False),
    sa.Column('api_downloads', sa.Integer(), nullable=False),
    sa.Column('other_downloads', sa.Integer(), nullable=False),
    sa.Column('top_countries', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id', 'download_date', name='uq_daily_summary')
    )
    op.create_index('idx_daily_summary_date', 'daily_download_summary', ['download_date'], unique=False)
    op.create_index('idx_daily_summary_downloads', 'daily_download_summary', ['total_downloads'], unique=False)
    op.create_index(op.f('ix_daily_download_summary_download_date'), 'daily_download_summary', ['download_date'], unique=False)
    op.create_index(op.f('ix_daily_download_summary_id'), 'daily_download_summary', ['id'], unique=False)
    op.create_index(op.f('ix_daily_download_summary_package_id'), 'daily_download_summary', ['package_id'], unique=False)
    op.create_table('package_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id', 'tag', name='uq_package_tag')
    )
    op.create_index('idx_tags_tag', 'package_tags', ['tag'], unique=False)
    op.create_index(op.f('ix_package_tags_id'), 'package_tags', ['id'], unique=False)
    op.create_index(op.f('ix_package_tags_package_id'), 'package_tags', ['package_id'], unique=False)
    op.create_index(op.f('ix_package_tags_tag'), 'package_tags', ['tag'], unique=False)
    op.create_table('package_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('changelog', sa.Text(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_hash_sha256', sa.String(length=64), nullable=False),
    sa.Column('s3_key', sa.String(length=512), nullable=False),
    sa.Column('manifest', sa.JSON(), nullable=False),
    sa.Column('runtime', sa.String(length=50), nullable=True),
    sa.Column('python_version', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'DEPRECATED', 'YANKED', name='versionstatus'), nullable=False),
    sa.Column('is_prerelease', sa.Boolean(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('download_count_last_30_days', sa.Integer(), nullable=False),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('virus_scan_status', sa.String(length=20), nullable=False),
    sa.Column('vulnerability_scan_status', sa.String(length=20), nullable=False),
    sa.Column('published_by_id', sa.Integer(), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('yanked_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('yanked_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.ForeignKeyConstraint(['published_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id', 'version', name='uq_package_version')
    )
    op.create_index('idx_versions_downloads', 'package_versions', ['download_count'], unique=False)
    op.create_index('idx_versions_package_status', 'package_versions', ['package_id', 'status'], unique=False)
    op.create_index('idx_versions_published', 'package_versions', ['published_at'], unique=False)
    op.create_index(op.f('ix_package_versions_download_count'), 'package_versions', ['download_count'], unique=False)
    op.create_index(op.f('ix_package_versions_id'), 'package_versions', ['id'], unique=False)
    op.create_index(op.f('ix_package_versions_package_id'), 'package_versions', ['package_id'], unique=False)
    op.create_index(op.f('ix_package_versions_status'), 'package_versions', ['status'], unique=False)
    op.create_index(op.f('ix_package_versions_version'), 'package_versions', ['version'], unique=False)
    op.create_table('download_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('package_id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=True),
    sa.Column('download_date', sa.Date(), nullable=False),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('user_agent', sa.String(length=512), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('referrer', sa.String(length=512), nullable=True),
    sa.Column('download_source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['version_id'], ['package_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('package_id', 'version_id', 'download_date', 'user_id', name='uq_daily_download_stats')
    )
    op.create_index('idx_download_stats_country', 'download_stats', ['country_code'], unique=False)
    op.create_index('idx_download_stats_date', 'download_stats', ['download_date'], unique=False)
    op.create_index('idx_download_stats_package_date', 'download_stats', ['package_id', 'download_date'], unique=False)
    op.create_index('idx_download_stats_source', 'download_stats', ['download_source'], unique=False)
    op.create_index('idx_download_stats_version_date', 'download_stats', ['version_id', 'download_date'], unique=False)
    op.create_index(op.f('ix_download_stats_download_date'), 'download_stats', ['download_date'], unique=False)
    op.create_index(op.f('ix_download_stats_id'), 'download_stats', ['id'], unique=False)
    op.create_index(op.f('ix_download_stats_package_id'), 'download_stats', ['package_id'], unique=False)
    op.create_index(op.f('ix_download_stats_user_id'), 'download_stats', ['user_id'], unique=False)
    op.create_index(op.f('ix_download_stats_version_id'), 'download_stats', ['version_id'], unique=False)
    op.create_table('package_dependencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('dependency_name', sa.String(length=255), nullable=False),
    sa.Column('version_spec', sa.String(length=100), nullable=False),
    sa.Column('dependency_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['version_id'], ['package_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('version_id', 'dependency_name', name='uq_version_dependency')
    )
    op.create_index('idx_dependencies_name', 'package_dependencies', ['dependency_name'], unique=False)
    op.create_index(op.f('ix_package_dependencies_dependency_name'), 'package_dependencies', ['dependency_name'], unique=False)
    op.create_index(op.f('ix_package_dependencies_id'), 'package_dependencies', ['id'], unique=False)
    op.create_index(op.f('ix_package_dependencies_version_id'), 'package_dependencies', ['version_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_package_dependencies_version_id'), table_name='package_dependencies')
    op.drop_index(op.f('ix_package_dependencies_id'), table_name='package_dependencies')
    op.drop_index(op.f('ix_package_dependencies_dependency_name'), table_name='package_dependencies')
    op.drop_index('idx_dependencies_name', table_name='package_dependencies')
    op.drop_table('package_dependencies')
    op.drop_index(op.f('ix_download_stats_version_id'), table_name='download_stats')
    op.drop_index(op.f('ix_download_stats_user_id'), table_name='download_stats')
    op.drop_index(op.f('ix_download_stats_package_id'), table_name='download_stats')
    op.drop_index(op.f('ix_download_stats_id'), table_name='download_stats')
    op.drop_index(op.f('ix_download_stats_download_date'), table_name='download_stats')
    op.drop_index('idx_download_stats_version_date', table_name='download_stats')
    op.drop_index('idx_download_stats_source', table_name='download_stats')
    op.drop_index('idx_download_stats_package_date', table_name='download_stats')
    op.drop_index('idx_download_stats_date', table_name='download_stats')
    op.drop_index('idx_download_stats_country', table_name='download_stats')
    op.drop_table('download_stats')
    op.drop_index(op.f('ix_package_versions_version'), table_name='package_versions')
    op.drop_index(op.f('ix_package_versions_status'), table_name='package_versions')
    op.drop_index(op.f('ix_package_versions_package_id'), table_name='package_versions')
    op.drop_index(op.f('ix_package_versions_id'), table_name='package_versions')
    op.drop_index(op.f('ix_package_versions_download_count'), table_name='package_versions')
    op.drop_index('idx_versions_published', table_name='package_versions')
    op.drop_index('idx_versions_package_status', table_name='package_versions')
    op.drop_index('idx_versions_downloads', table_name='package_versions')
    op.drop_table('package_versions')
    op.drop_index(op.f('ix_package_tags_tag'), table_name='package_tags')
    op.drop_index(op.f('ix_package_tags_package_id'), table_name='package_tags')
    op.drop_index(op.f('ix_package_tags_id'), table_name='package_tags')
    op.drop_index('idx_tags_tag', table_name='package_tags')
    op.drop_table('package_tags')
    op.drop_index(op.f('ix_daily_download_summary_package_id'), table_name='daily_download_summary')
    op.drop_index(op.f('ix_daily_download_summary_id'), table_name='daily_download_summary')
    op.drop_index(op.f('ix_daily_download_summary_download_date'), table_name='daily_download_summary')
    op.drop_index('idx_daily_summary_downloads', table_name='daily_download_summary')
    op.drop_index('idx_daily_summary_date', table_name='daily_download_summary')
    op.drop_table('daily_download_summary')
    op.drop_index(op.f('ix_packages_total_downloads'), table_name='packages')
    op.drop_index(op.f('ix_packages_status'), table_name='packages')
    op.drop_index(op.f('ix_packages_package_type'), table_name='packages')
    op.drop_index(op.f('ix_packages_owner_id'), table_name='packages')
    op.drop_index(op.f('ix_packages_normalized_name'), table_name='packages')
    op.drop_index(op.f('ix_packages_name'), table_name='packages')
    op.drop_index(op.f('ix_packages_is_private'), table_name='packages')
    op.drop_index(op.f('ix_packages_id'), table_name='packages')
    op.drop_index('idx_packages_updated', table_name='packages')
    op.drop_index('idx_packages_type_status', table_name='packages')
    op.drop_index('idx_packages_downloads', table_name='packages')
    op.drop_table('packages')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_github_username'), table_name='users')
    op.drop_index(op.f('ix_users_github_id'), table_name='users')
    op.drop_index(op.f('ix_users_github_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
